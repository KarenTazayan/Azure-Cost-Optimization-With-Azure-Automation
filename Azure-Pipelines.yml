# https://aka.ms/yaml

variables:
  nameSuffix: 't1'
  appNamePrefix: 'shoppingapp1'

trigger:
- main

stages:
# - stage: Build
#   displayName: Build stage
#   pool:
#     name: Azure Pipelines
#     demands:
#         - msbuild
#   variables:
#     buildPlatform: 'Any CPU'
#     buildConfiguration: 'Release'
#   jobs:
#   - job: Build_Solution
#     displayName: Whole solution build process
#     steps:
#     - task: DotNetCoreCLI@2
#       displayName: 'Build solution ShoppingApp.sln'
#       inputs:
#         command: build
#         projects: 'ShoppingApp.sln'
#         configuration: '$(buildConfiguration)'

##################### Packing Artifacts Stage #####################

- stage: Packing_Artifacts
  displayName: Packing artifacts stage
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  pool:
    name: Azure Pipelines
    vmImage: 'ubuntu-latest'
    demands:
        - msbuild
  variables:
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'
  jobs:
  - job: Packing_Artifacts
    displayName: Packing Artifacts
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Publish ShoppingApp.SiloHost'
      inputs:
        command: 'build'
        projects: '$(Build.SourcesDirectory)/src/ShoppingApp.SiloHost/*.csproj'
        arguments: >
          /p:Platform="$(buildPlatform)" /p:Configuration=$(buildConfiguration) /p:DeployOnBuild=true 
          /p:WebPublishMethod=FileSystem /p:publishUrl=$(Build.ArtifactStagingDirectory)/services/ShoppingApp.SiloHost
    
    - task: DotNetCoreCLI@2
      displayName: 'Publish ShoppingApp.WebUI'
      inputs:
        command: 'build'
        projects: '$(Build.SourcesDirectory)/src/ShoppingApp.WebUI/*.csproj'
        arguments: >
          /p:Platform="$(buildPlatform)" /p:Configuration=$(buildConfiguration) /p:DeployOnBuild=true 
          /p:WebPublishMethod=FileSystem /p:publishUrl=$(Build.ArtifactStagingDirectory)/services/ShoppingApp.WebUI
      
    - task: ArchiveFiles@2
      displayName: 'Pack ShoppingApp.SiloHost'
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/services/ShoppingApp.SiloHost'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/services/ShoppingApp.SiloHost.zip'
        replaceExistingArchive: true

    - task: ArchiveFiles@2
      displayName: 'Pack ShoppingApp.WebUI'
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/services/ShoppingApp.WebUI'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/services/ShoppingApp.WebUI.zip'
        replaceExistingArchive: true

    - task: CopyFiles@2
      displayName: 'Copy whole infrastructure deployment file'
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)/deploy/azure-app-service'
        contents: '*.bicep'
        targetFolder: '$(Build.ArtifactStagingDirectory)/infrastructure/deploy'
        cleanTargetFolder: true

    - task: CopyFiles@2
      displayName: 'Copy services deployment *.zip packages'
      inputs:
        sourceFolder: '$(Build.ArtifactStagingDirectory)/services'
        contents: '*.zip'
        targetFolder: '$(Build.ArtifactStagingDirectory)/services/deploy'
        cleanTargetFolder: true
    
    # https://docs.microsoft.com/en-us/azure/devops/pipelines/artifacts/pipeline-artifacts
    - task: PublishPipelineArtifact@1
      displayName: 'Publish whole infrastructure deployment file to Pipeline Artifacts'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/infrastructure/deploy'
        artifactName: 'infrastructure'
    
    - task: PublishPipelineArtifact@1
      displayName: 'Publish services deployment *.zip packages to Pipeline Artifacts'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/services/deploy'
        artifactName: 'services'

##################### Provision Infrastructure Stage #####################

- stage: Provision_Infrastructure
  displayName: Provision infrastructure stage
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  pool:
    name: Azure Pipelines
  variables:
    azureServiceConnection: 'DefaultAzureServiceConnection'
    resourceGroupName: 'rg-$(appNamePrefix)'
    location: 'francecentral'
    templateFile: '$(Pipeline.Workspace)/infrastructure/azuredeploy.bicep'
  jobs:
  - job: Deploy_Infrastructure
    displayName: Deploy infrastructure in Azure
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: 'Download whole infrastructure deployment file'
      inputs:
        artifact: 'infrastructure'
        path: $(Pipeline.Workspace)/infrastructure

    - task: AzureCLI@2
      displayName: 'Deploy the whole infrastructure to Azure'
      inputs:
        azureSubscription: 'DefaultAzureServiceConnection'
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az --version
          az group create --name $(resourceGroupName)-$(nameSuffix) --location $(location)
          az deployment group create --resource-group $(resourceGroupName)-$(nameSuffix) `
             --template-file $(templateFile) --parameters nameSuffix='$(nameSuffix)' `
             appNamePrefix='$(appNamePrefix)' sqlAdministratorPassword='Passw@rd1+'

##################### Deploy Solution Stage #####################

- stage: Deploy_Solution
  displayName: Deploy solution stage
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  pool:
    name: Azure Pipelines
  variables:
    resourceGroupName: 'rg-$(appNamePrefix)'
  jobs:
  - job: Deploy_Services
    displayName: Services deploy process
    workspace:
      clean: all
    steps:
    - task: DeleteFiles@1
      displayName: 'Remove services deployment *.zip packages'
      inputs:
        contents: '**/*'

    - task: DownloadPipelineArtifact@2
      displayName: 'Download services deployment *.zip packages'
      inputs:
        artifact: 'services'
        path: $(Pipeline.Workspace)/services

    - task: AzureRmWebAppDeployment@4
      displayName: 'Deploy ShoppingApp.SiloHost'
      inputs:
        appType: webApp
        ConnectionType: AzureRM            
        ConnectedServiceName: 'DefaultAzureServiceConnection'
        ResourceGroupName: '$(resourceGroupName)'
        WebAppName: '$(appNamePrefix)-silohost-$(nameSuffix)'
        Package: '$(Pipeline.Workspace)/services/ShoppingApp.SiloHost.zip'

    - task: AzureRmWebAppDeployment@4
      displayName: 'Deploy ShoppingApp.WebUI'
      inputs:
        appType: webApp
        ConnectionType: AzureRM            
        ConnectedServiceName: 'DefaultAzureServiceConnection'
        ResourceGroupName: '$(resourceGroupName)'
        WebAppName: '$(appNamePrefix)-webui-$(nameSuffix)'
        Package: '$(Pipeline.Workspace)/services/ShoppingApp.WebUI.zip'